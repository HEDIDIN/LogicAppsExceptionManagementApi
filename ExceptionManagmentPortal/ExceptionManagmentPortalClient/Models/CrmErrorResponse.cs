// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace ExceptionManagmentPortal.Models
{
    public partial class CrmErrorResponse
    {
        private string _action;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Action
        {
            get { return this._action; }
            set { this._action = value; }
        }
        
        private string _body;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Body
        {
            get { return this._body; }
            set { this._body = value; }
        }
        
        private int? _code;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Code
        {
            get { return this._code; }
            set { this._code = value; }
        }
        
        private IList<string> _errors;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<string> Errors
        {
            get { return this._errors; }
            set { this._errors = value; }
        }
        
        private bool? _isError;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? IsError
        {
            get { return this._isError; }
            set { this._isError = value; }
        }
        
        private string _notes;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Notes
        {
            get { return this._notes; }
            set { this._notes = value; }
        }
        
        private string _prescriberId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string PrescriberId
        {
            get { return this._prescriberId; }
            set { this._prescriberId = value; }
        }
        
        private int? _resolved;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Resolved
        {
            get { return this._resolved; }
            set { this._resolved = value; }
        }
        
        private int? _severity;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Severity
        {
            get { return this._severity; }
            set { this._severity = value; }
        }
        
        private string _source;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Source
        {
            get { return this._source; }
            set { this._source = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the CrmErrorResponse class.
        /// </summary>
        public CrmErrorResponse()
        {
            this.Errors = new LazyList<string>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken actionValue = inputObject["action"];
                if (actionValue != null && actionValue.Type != JTokenType.Null)
                {
                    this.Action = ((string)actionValue);
                }
                JToken bodyValue = inputObject["body"];
                if (bodyValue != null && bodyValue.Type != JTokenType.Null)
                {
                    this.Body = ((string)bodyValue);
                }
                JToken codeValue = inputObject["code"];
                if (codeValue != null && codeValue.Type != JTokenType.Null)
                {
                    this.Code = ((int)codeValue);
                }
                JToken errorsSequence = ((JToken)inputObject["errors"]);
                if (errorsSequence != null && errorsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken errorsValue in ((JArray)errorsSequence))
                    {
                        this.Errors.Add(errorsValue.ToString(Newtonsoft.Json.Formatting.Indented));
                    }
                }
                JToken isErrorValue = inputObject["isError"];
                if (isErrorValue != null && isErrorValue.Type != JTokenType.Null)
                {
                    this.IsError = ((bool)isErrorValue);
                }
                JToken notesValue = inputObject["notes"];
                if (notesValue != null && notesValue.Type != JTokenType.Null)
                {
                    this.Notes = ((string)notesValue);
                }
                JToken prescriberIdValue = inputObject["prescriberId"];
                if (prescriberIdValue != null && prescriberIdValue.Type != JTokenType.Null)
                {
                    this.PrescriberId = ((string)prescriberIdValue);
                }
                JToken resolvedValue = inputObject["resolved"];
                if (resolvedValue != null && resolvedValue.Type != JTokenType.Null)
                {
                    this.Resolved = ((int)resolvedValue);
                }
                JToken severityValue = inputObject["severity"];
                if (severityValue != null && severityValue.Type != JTokenType.Null)
                {
                    this.Severity = ((int)severityValue);
                }
                JToken sourceValue = inputObject["source"];
                if (sourceValue != null && sourceValue.Type != JTokenType.Null)
                {
                    this.Source = ((string)sourceValue);
                }
            }
        }
    }
}
